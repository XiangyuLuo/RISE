# draw sample subplots
for (i in seq_along(sample_id)) {
id <- sample_id[i]
# read ARI records dataframe
ARI <- readRDS(paste0("Visualization/ARI_Sum_", id, ".rds"))
colnames(ARI)[colnames(ARI) == "LogTrans"] <- "w/o imputation"
long_ARI <- melt(ARI, variable.name = "Method", value.name = "ARI")
long_ARI$Method <- factor(long_ARI$Method, levels = names(method_colors))
# draw plots
p <- ggplot(long_ARI, aes(x = Method, y = ARI, fill = Method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
# add subplot to plots list
plots[[i]] <- p
}
# combine subplots and add space for axis titles
combined_plot <- wrap_plots(plots, ncol = 2, nrow = 3) +
plot_annotation(title = NULL,caption = NULL,
theme = theme(plot.margin = unit(c(0, 0, 1.5, 1.5), "cm")))
# add x and y titles
final_plot <- ggdraw() +
draw_plot(combined_plot, 0, 0, 1, 1) +
draw_label("Method", x = 0.5, y = 0.02, vjust = 0, size = 16) +
draw_label("ARI", x = 0.02, y = 0.5, angle = 90, vjust = 1.5, size = 16)
# print and save the final plot
print(final_plot)
ggsave(plot = final_plot,
paste0("Visualization/ARI.png"),
width = 12, height = 8, dpi = 300, bg = "white")
# Visualization
# store the subplots from all samples
plots <- list()
# draw sample subplots
for (i in seq_along(sample_id)) {
id <- sample_id[i]
# read ARI records dataframe
ARI <- readRDS(paste0("Visualization/ARI_Sum_", id, ".rds"))
colnames(ARI)[colnames(ARI) == "LogTrans"] <- "w/o imputation"
long_ARI <- melt(ARI, variable.name = "Method", value.name = "ARI")
long_ARI$Method <- factor(long_ARI$Method, levels = method_names)
# draw plots
p <- ggplot(long_ARI, aes(x = Method, y = ARI, fill = Method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
# add subplot to plots list
plots[[i]] <- p
}
# combine subplots and add space for axis titles
combined_plot <- wrap_plots(plots, ncol = 2, nrow = 3) +
plot_annotation(title = NULL,caption = NULL,
theme = theme(plot.margin = unit(c(0, 0, 1.5, 1.5), "cm")))
# add x and y titles
final_plot <- ggdraw() +
draw_plot(combined_plot, 0, 0, 1, 1) +
draw_label("Method", x = 0.5, y = 0.02, vjust = 0, size = 16) +
draw_label("ARI", x = 0.02, y = 0.5, angle = 90, vjust = 1.5, size = 16)
# print and save the final plot
print(final_plot)
ggsave(plot = final_plot,
paste0("Visualization/ARI.png"),
width = 12, height = 8, dpi = 300, bg = "white")
ARI_151507 <- readRDS("~/Desktop/PhD/SAVER/RISEST/SAVER_Imputed/151507/ARI_151507.rds")
View(ARI_151507)
ARI_Sum_151507 <- readRDS("~/Downloads/RISE-main/ARI_Record/Visualization/ARI_Sum_151507.rds")
View(ARI_Sum_151507)
View(ARI_151507)
ARI_Sum_151507$SAVER <- ARI_151507$x
saveRDS(ARI_Sum_151507,paste0("Visualization/ARI_Sum_",id,".rds"))
# Visualization
# store the subplots from all samples
plots <- list()
# draw sample subplots
for (i in seq_along(sample_id)) {
id <- sample_id[i]
# read ARI records dataframe
ARI <- readRDS(paste0("Visualization/ARI_Sum_", id, ".rds"))
colnames(ARI)[colnames(ARI) == "LogTrans"] <- "w/o imputation"
long_ARI <- melt(ARI, variable.name = "Method", value.name = "ARI")
long_ARI$Method <- factor(long_ARI$Method, levels = method_names)
# draw plots
p <- ggplot(long_ARI, aes(x = Method, y = ARI, fill = Method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
# add subplot to plots list
plots[[i]] <- p
}
# combine subplots and add space for axis titles
combined_plot <- wrap_plots(plots, ncol = 2, nrow = 3) +
plot_annotation(title = NULL,caption = NULL,
theme = theme(plot.margin = unit(c(0, 0, 1.5, 1.5), "cm")))
# add x and y titles
final_plot <- ggdraw() +
draw_plot(combined_plot, 0, 0, 1, 1) +
draw_label("Method", x = 0.5, y = 0.02, vjust = 0, size = 16) +
draw_label("ARI", x = 0.02, y = 0.5, angle = 90, vjust = 1.5, size = 16)
# print and save the final plot
print(final_plot)
ggsave(plot = final_plot,
paste0("Visualization/ARI.png"),
width = 12, height = 8, dpi = 300, bg = "white")
ggsave(plot = final_plot,
paste0("Visualization/ARI.png"),
width = 10, height = 8, dpi = 300, bg = "white")
ggsave(plot = final_plot,
paste0("Visualization/ARI.png"),
width = 11, height = 8, dpi = 300, bg = "white")
# Sample ID
sample_IDs <- c(151507:151510,151669:151676)
sample <- sample_IDs[1]
# Spot Label
ground_truth <- read.csv(paste0('Dataset/',sample,'/cluster_labels.csv'),header = TRUE)
setwd("~/Desktop/PhD/SAVER/New_Spatial_Analysis/")
setwd("~/Desktop/PhD/SAVER/RISEST")
# Sample ID
sample_IDs <- c(151507:151510,151669:151670)
sample <- sample_IDs[1]
# Spot Label
ground_truth <- read.csv(paste0('Dataset/',sample,'/cluster_labels.csv'),header = TRUE)
ground_truth <- ground_truth[!is.na(ground_truth[,'ground_truth']),]
rownames(ground_truth) <- lapply(ground_truth[,'key'],function(y) sub("^.*?_", "",y))
spots <- rownames(ground_truth)
K <- length(unique(ground_truth$ground_truth))
# Spot Position
position_path <- paste0('Dataset/', sample, '/tissue_positions_list.csv')
spot_position <- read.csv(position_path, header = FALSE)
rownames(spot_position) <- spot_position[,1]
spot_position <- spot_position[,-1]
spot_position <- spot_position[match(spots,rownames(spot_position)),]
colnames(spot_position) <- c('1','2','3',"X",'Y')
spot_position <- spot_position[,c("X","Y")]
# Spot Gene Expression
express_path <- paste0('Dataset/', sample, '/', sample, '_filtered_feature_bc_matrix.h5')
spot_express <- as.data.frame(Seurat::Read10X_h5(express_path))
spot_express <- spot_express[, spots]
genes <- rownames(spot_express)
length(genes)
sample <- sample_IDs[2]
# Spot Label
ground_truth <- read.csv(paste0('Dataset/',sample,'/cluster_labels.csv'),header = TRUE)
ground_truth <- ground_truth[!is.na(ground_truth[,'ground_truth']),]
rownames(ground_truth) <- lapply(ground_truth[,'key'],function(y) sub("^.*?_", "",y))
spots <- rownames(ground_truth)
K <- length(unique(ground_truth$ground_truth))
# Spot Position
position_path <- paste0('Dataset/', sample, '/tissue_positions_list.csv')
spot_position <- read.csv(position_path, header = FALSE)
rownames(spot_position) <- spot_position[,1]
spot_position <- spot_position[,-1]
spot_position <- spot_position[match(spots,rownames(spot_position)),]
colnames(spot_position) <- c('1','2','3',"X",'Y')
spot_position <- spot_position[,c("X","Y")]
# Spot Gene Expression
express_path <- paste0('Dataset/', sample, '/', sample, '_filtered_feature_bc_matrix.h5')
spot_express <- as.data.frame(Seurat::Read10X_h5(express_path))
spot_express <- spot_express[, spots]
genes <- rownames(spot_express)
length(genes)
sample <- sample_IDs[2]
# Spot Label
ground_truth <- read.csv(paste0('Dataset/',sample,'/cluster_labels.csv'),header = TRUE)
ground_truth <- ground_truth[!is.na(ground_truth[,'ground_truth']),]
rownames(ground_truth) <- lapply(ground_truth[,'key'],function(y) sub("^.*?_", "",y))
spots <- rownames(ground_truth)
K <- length(unique(ground_truth$ground_truth))
# Spot Position
position_path <- paste0('Dataset/', sample, '/tissue_positions_list.csv')
spot_position <- read.csv(position_path, header = FALSE)
rownames(spot_position) <- spot_position[,1]
spot_position <- spot_position[,-1]
spot_position <- spot_position[match(spots,rownames(spot_position)),]
colnames(spot_position) <- c('1','2','3',"X",'Y')
spot_position <- spot_position[,c("X","Y")]
# Spot Gene Expression
express_path <- paste0('Dataset/', sample, '/', sample, '_filtered_feature_bc_matrix.h5')
spot_express <- as.data.frame(Seurat::Read10X_h5(express_path))
spot_express <- spot_express[, spots]
genes <- rownames(spot_express)
length(genes)
sample <- sample_IDs[4]
# Spot Label
ground_truth <- read.csv(paste0('Dataset/',sample,'/cluster_labels.csv'),header = TRUE)
ground_truth <- ground_truth[!is.na(ground_truth[,'ground_truth']),]
rownames(ground_truth) <- lapply(ground_truth[,'key'],function(y) sub("^.*?_", "",y))
spots <- rownames(ground_truth)
K <- length(unique(ground_truth$ground_truth))
# Spot Position
position_path <- paste0('Dataset/', sample, '/tissue_positions_list.csv')
spot_position <- read.csv(position_path, header = FALSE)
rownames(spot_position) <- spot_position[,1]
spot_position <- spot_position[,-1]
spot_position <- spot_position[match(spots,rownames(spot_position)),]
colnames(spot_position) <- c('1','2','3',"X",'Y')
spot_position <- spot_position[,c("X","Y")]
# Spot Gene Expression
express_path <- paste0('Dataset/', sample, '/', sample, '_filtered_feature_bc_matrix.h5')
spot_express <- as.data.frame(Seurat::Read10X_h5(express_path))
spot_express <- spot_express[, spots]
genes <- rownames(spot_express)
length(genes)
TimeSum_151507 <- readRDS("~/Downloads/RISE-main/Run_Time/Summary/TimeSum_151507.rds")
View(TimeSum_151507)
setwd("~/Downloads/RISE-main/Run_Time/")
sample_id <- c(151507:151510,151669:151676)
method_names <- c("RISE","SEDR","Sprod","SAVER","scImpute")
id <- sample_id[1]
runtime_record <- data.frame(matrix(nrow = 2,ncol = length(method_names)),row.names = c("mean","sd"))
View(runtime_record)
colnames(runtime_record) <- method_names
RunTime_151507 <- readRDS("~/Downloads/RISE-main/Run_Time/SEDR/RunTime_151507.rds")
View(RunTime_151507)
time <- RunTime_151507$Time/2000*33538
summary(time)
sd(time)
mean(time)
for(id in c(151507, 151510, 151669:151676)){
print(id)
}
for(id in c(151507, 151510, 151669:151676)){
print(id)
time <- readRDS(paste0("SEDR/RunTime_",id,".rds"))
time <- time$Time/2000*33538
print(mean(time))
print(sd(time))
}
for(id in c(151507, 151510, 151669:151676)){
print(id)
time <- readRDS(paste0("SEDR/RunTime_",id,".rds"))
time <- time$Time/2000*33538
print(mean(time))
print(sd(time))
print("-----------")
}
RunTime_151510 <- readRDS("~/Downloads/RISE-main/Run_Time/SEDR/RunTime_151510.rds")
View(RunTime_151510)
RunTime_151674 <- readRDS("~/Downloads/RISE-main/Run_Time/SEDR/RunTime_151674.rds")
View(RunTime_151674)
time <- RunTime_151674$Time[RunTime_151674$Time < 25]
mean(time)
sd(time)
time <- RunTime_151674$Time[RunTime_151674$Time < 25]/2000*33538
mean(time)
sd(time)
time <- RunTime_151674$Time[RunTime_151674$Time < 3]/2000*33538
mean(time)
sd(time)
RunTime_151510 <- readRDS("~/Downloads/RISE-main/Run_Time/SEDR/RunTime_151510.rds")
View(RunTime_151510)
time <- RunTime_151510$Time[RunTime_151510$Time < 2]/2000*33538
mean(time)
sd(time)
RunTime_151507 <- readRDS("~/Downloads/RISE-main/Run_Time/scImpute/RunTime_151507.rds")
RunTime_151508 <- readRDS("~/Downloads/RISE-main/Run_Time/scImpute/RunTime_151508.rds")
RunTime_151509 <- readRDS("~/Downloads/RISE-main/Run_Time/scImpute/RunTime_151509.rds")
RunTime_151507 <- readRDS("~/Downloads/RISE-main/Run_Time/scImpute/RunTime_151507.rds")
RunTime_151507
time <- RunTime_151507[RunTime_151507 <60]
mean(time)
sd(time)
RunTime_151675 <- readRDS("~/Downloads/RISE-main/Run_Time/RISE/RunTime_151675.rds")
mean(RunTime_151675)
sd(RunTime_151675)
RunTime_151676 <- readRDS("~/Downloads/RISE-main/Run_Time/RISE/RunTime_151676.rds")
sd(RunTime_151676)
mean(RunTime_151676)
table(RunTime_151675 == RunTime_151676)
RunTime_151508 <- readRDS("~/Downloads/RISE-main/Run_Time/RISE/RunTime_151508.rds")
mean(RunTime_151508)
sd(RunTime_151508)
ggplot(ARI_df_long, aes(x = method,y = value)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
View(simu_ARI)
apply(simu_ARI,2,median)
simu2_counts <- readRDS("simu_counts.rds")
setwd("~/Desktop/PhD/SAVER/RISEST/SRTsim")
library(ggplot2)
simu2_counts <- readRDS("simu_counts.rds")
sparisty <- apply(simu2_counts, 2, function(x) sum(as.numeric(x))/lengthx)
sparisty <- apply(simu2_counts, 2, function(x) sum(as.numeric(x))/length(x))
summary(sparisty)
ggplot(ARI_df_long, aes(x = method,y = value)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
ggplot(ARI_df_long, aes(x = method,y = value)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
ARI_df_long <- reshape2::melt(simu_ARI,variable.name = "method")
ARI_df_long$method <- factor(ARI_df_long$method, levels = c("RISE", "Sprod","SEDR", "SAVER", "scImpute", "w/o imputation"))
ggplot(ARI_df_long, aes(x = method,y = value)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
View(ARI_df_long)
ggplot(ARI_df_long, aes(x = method, y = value, fill = method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
simu_p <- ggplot(ARI_df_long, aes(x = method,y = value, fill = method)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
ggplot(ARI_df_long, aes(x = method,y = value, fill = method)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5))
ggplot(ARI_df_long, aes(x = method, y = value, fill = method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
ggplot(ARI_df_long, aes(x = method, y = value, fill = method)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = paste0("Sample ID: ",id), x = NULL, y = NULL) +
theme_minimal() +
ylim(0, 0.6) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(color = "black"),
axis.ticks.length = unit(0.3, "cm"),
axis.line = element_line(color = "black"),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10)
)
ggplot(ARI_df_long, aes(x = method,y = value, fill = method)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
simu_p <- ggplot(ARI_df_long, aes(x = method,y = value, fill = method)) +
# stat_summary(fun.min = min, fun.max = max, fun = median, geom = "boxplot",position = position_dodge(width = 0.8)) +
geom_violin(trim = FALSE, width = 1, scale = "width") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
labs(title = "Simulated Data of Sample 151674",
x = "Imputation Method",
y = "ARI") +
ylim(0,0.6) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_line(size = 0.5),
axis.line = element_line(linewidth = 0.5, colour = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
setwd("~/Desktop/PhD/SAVER/RISEST/SRTsim")
ggsave(filename = "simu_ARI.png", simu_p ,dpi = 500, width = 6, height = 4)
simu_counts <- readRDS("~/Desktop/PhD/SAVER/RISEST/SRTsim/simu_counts.rds")
simu_metadata <- readRDS("~/Desktop/PhD/SAVER/RISEST/SRTsim/simu_metadata.rds")
library(RISE)
devtools::document()  # 更新NAMESPACE和帮助文件
devtools::install()   # 重新安装R包
library(RISE)
# 删除已安装的包
remove.packages("RISE")
# 清除可能的残留文件
unlink("/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RISE", recursive = TRUE)
# 重新安装包
devtools::install()
# 在R中加载数据
load("data/spot_example.RData")
save(spot_example, file = "data/spot_example.RData", version = 2)
